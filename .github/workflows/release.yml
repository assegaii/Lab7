name: 'C++ CI'

on:
  push:
    branches:
      - main

jobs:
  Linux:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_TOOLCHAIN_FILE=./external/vcpkg/scripts/buildsystems/vcpkg.cmake
      - run: cmake --build .
      - run: ctest --output-on-failure
      - run: cmake --build . --target package
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          path: ./DuplicatesFinder-1.0.${{ github.run_number }}-Linux.deb

  Windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_TOOLCHAIN_FILE=./external/vcpkg/scripts/buildsystems/vcpkg.cmake
      - run: cmake --build .
      - run: ctest --output-on-failure
      - run: cmake --build . --target package
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: ./DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip
      - name: Generate SHA256 hash for the executable
        run: |
          if (Test-Path ./DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip) {
            $hash = Get-FileHash ./DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip -Algorithm SHA256
            $hash.Hash | Out-File hash.txt
          } else {
            Write-Error "Executable not found!"
          }
        shell: pwsh
      - name: Generate Winget Manifest
        run: |
          echo "Generating Winget Manifest..."
          SHA256_HASH=$(cat hash.txt)
          echo "
          id: assegaii.bayan
          version: 1.0.${{ github.run_number }}
          name: Bayan
          description: Программа для поиска дубликатов файлов
          homepage: https://github.com/assegaii/Lab7
          license: MIT
          install:
            - url: https://github.com/assegaii/Lab7/releases/download/v1.0.${{ github.run_number }}/DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip
              sha256: $SHA256_HASH" > winget-manifest.yaml
        shell: bash

  Release:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [Linux, Windows]
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-artifact
          path: ./ 
      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-artifact
          path: ./ 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./DuplicatesFinder-1.0.${{ github.run_number }}-Linux.deb
          asset_name: DuplicatesFinder-1.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip
          asset_name: DuplicatesFinder-1.0.${{ github.run_number }}-Windows.zip
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Upload Winget Manifest to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./winget-manifest.yaml
          asset_name: winget-manifest.yaml
          asset_content_type: application/yaml
