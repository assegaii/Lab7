name: 'C++ CI'

on:
  push:
    branches:
      - main

jobs:
  Linux:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: |
          sudo apt-get update && sudo apt-get install -y \
          libboost-filesystem-dev \
          libboost-program-options-dev \
          libboost-dev
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          path: ./DuplicatesFinder-1.0.${{ github.run_number }}-Linux.deb

  Windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: .vcpkg/installed
          key: ${{ runner.os }}-vcpkg-boost-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-
      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git
      - name: Bootstrap vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat
      - name: Install Boost dependencies via vcpkg
        run: .\vcpkg\vcpkg install boost-filesystem boost-program-options boost-crc boost-algorithm
      - name: Configure CMake
        run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_TOOLCHAIN_FILE=.\vcpkg\scripts\buildsystems\vcpkg.cmake
      - run: cmake --build . 
      - run: cmake --build . --target package
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: ./DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip


  Release:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [Linux, Windows]
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-artifact
          path: ./ 
      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-artifact
          path: ./ 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./DuplicatesFinder-1.0.${{ github.run_number }}-Linux.deb
          asset_name: DuplicatesFinder-1.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip
          asset_name: DuplicatesFinder-1.0.${{ github.run_number }}-Windows.zip
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Calculate SHA256 for Windows
        id: sha256_windows
        run: |
          sha256sum ./DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip | awk '{ print $1 }' > sha256_windows.txt
          echo "sha256=$(cat sha256_windows.txt)" >> $GITHUB_ENV
      - name: Create WinGet Manifest
        run: |
          mkdir -p winget-manifest
          cat <<EOF > winget-manifest/DuplicatesFinder.yaml
          PackageIdentifier: "assegaii.DuplicatesFinder"
          PackageVersion: "1.0.${{ github.run_number }}"
          Publisher: "assegai"
          Name: "DuplicatesFinder"
          Description: "Tool to find duplicate files."
          License: "MIT"
          LicenseUrl: "https://github.com/assegaii/Lab7/LICENSE"
          Homepage: "https://github.com/assegaii/Lab7"
          Installers:
            - Architecture: "x64"
              InstallerType: "zip"
              InstallerUrl: "https://github.com/${{ github.repository }}/releases/download/v${{ github.run_number }}/DuplicatesFinder-1.0.${{ github.run_number }}-win64.zip"
              InstallerSha256: "${{ env.sha256 }}"
          EOF
      - name: Commit and Push Manifest to winget-pkgs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://github.com/microsoft/winget-pkgs.git
          cp winget-manifest/DuplicatesFinder.yaml winget-pkgs/manifests/d/DuplicatesFinder/DuplicatesFinder.yaml
          cd winget-pkgs
          git config user.name "assegaii"
          git config user.email "dmitryanons@gmail.com"
          git checkout -b add-duplicatesfinder-${{ github.run_number }}
          git add .
          git commit -m "Add manifest for DuplicatesFinder 1.0.${{ github.run_number }}"
          git push origin add-duplicatesfinder-${{ github.run_number }}
          gh pr create --repo microsoft/winget-pkgs --title "Add DuplicatesFinder 1.0.${{ github.run_number }}" --body "Automatically generated manifest for DuplicatesFinder."
